import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { getSortedPostsData } from "../utils/posts";
import { GetStaticProps } from "next";
import { IPostData } from "types";
import { useEffect } from "react";

interface IHomeProps {
  allPostsData: IPostData[];
}

const Home: NextPage<IHomeProps> = ({ allPostsData }) => {
  const { data: hello, isLoading } = trpc.useQuery([
    "example.hello",
    { text: "there" },
  ]);
  const mutation = trpc.useMutation(["comments.create-comment"]);

  useEffect(() => {
    mutation.mutate({
      postId: 1,
      comment: "test comment here",
      userId: "cl5yuk8zn0758d8v8f8pdzl15",
    });
  }, []);

  const { data: authTest } = trpc.useQuery(["auth.getSession"]);
  const { data: authTest2 } = trpc.useQuery(["auth.getSecretMessage"]);

  console.log(authTest);

  console.log(authTest2);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div>{hello ? <p>{hello.greeting}</p> : <p>Loading..</p>}</div>
      </div>
      <section>
        <h2>Blog</h2>
        <ul>
          {allPostsData.map(({ slug, date, title }) => (
            <li key={slug}>
              {title}
              <br />
              {slug}
              <br />
              {date}
            </li>
          ))}
        </ul>
      </section>
    </>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  const allPostsData = getSortedPostsData();

  return {
    props: {
      allPostsData,
    },
  };
};

export default Home;
